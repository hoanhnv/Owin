@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Owin.Web.Models.IndexViewModel>
<html>
<head>
    <title></title>
    <!-- Force latest IE rendering engine or ChromeFrame if installed -->
    <!--[if IE]><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><![endif]-->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Content/bootstrap/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap/bootstrap-theme.css" rel="stylesheet" />
    <link href="~/Content/css/jquery.fileupload.css" rel="stylesheet" />
    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
        <script src="~/Scripts/html5shiv.js"></script>
        <script src="~/Scripts/respond.min.js"></script>
    <![endif]-->
    <style>
        #wrap {
            min-height: 100%;
            height: auto !important;
            height: 100%;
            margin: 0 auto -60px;
            padding: 0 0 60px;
        }
        #footer {
            padding: 5px;
            background-color: #f5f5f5;
        }
    </style>
</head>
<body>
    <div id="wrap">
        <div class="container">
            <div class="page-header">
                <h1>@Model.Title</h1>
            </div>
            <p class="lead">Pin a fixed-height footer to the bottom of the viewport in desktop browsers with this custom HTML and CSS.</p>
            <p>Use <a href="../sticky-footer-navbar">the sticky footer with a fixed navbar</a> if need be, too.</p>
        </div>
    </div>
    <div id="footer">
        <div class="container">
            <!-- The fileinput-button span is used to style the file input field as button -->
            <span class="btn btn-success fileinput-button">
                <i class="glyphicon glyphicon-plus"></i>
                <span>Select files...</span>
                <!-- The file input field used as target for the file upload widget -->
                <input id="fileupload" type="file" name="files[]">
            </span>
            <br>
            <br>
            <!-- The global progress bar -->
            <div id="progress" class="progress">
                <div class="progress-bar progress-bar-success"></div>
            </div>
            <!-- The container for the uploaded files -->
            <div id="files" class="files"></div>
        </div>
    </div>

    <script src="~/Scripts/jquery-2.0.3.js"></script>
    <script src="~/Scripts/jquery.ui.widget.js"></script>
    <script src="~/Scripts/jquery.iframe-transport.js"></script>
    <script src="~/Scripts/jquery.fileupload.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script>
       /*jslint unparam: true */
       /*global window, $ */
       $(function () {
            'use strict';
           // Change this to the location of your server-side upload handler:
           var url = 'api/Files';
           $('#fileupload').fileupload({
                url: url,
               dataType: 'json',
               done: function (e, data) {
                    $.each(data.result.files, function (index, file) {
                        $('<p/>').text(file.name).appendTo('#files');
                    });
                },
               progressall: function (e, data) {
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                   $('#progress .progress-bar').css(
                       'width',
                       progress + '%'
                   );
                }
            }).prop('disabled', !$.support.fileInput)
               .parent().addClass($.support.fileInput ? undefined : 'disabled');
        });
    </script>
</body>

</html>